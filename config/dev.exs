use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with brunch.io to recompile .js and .css sources.
config :bloomchain, BloomchainWeb.Endpoint,
  http: [port: 4000],
  debug_errors: true,
  code_reloader: false,
  check_origin: false,
  watchers: [
    yarn: ["watch", cd: Path.expand("../lib/bloomchain_web/client", __DIR__)]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# command from your terminal:
#
#     openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -keyout priv/server.key -out priv/server.pem
#
# The `http:` config above can be replaced with:
#
#     https: [port: 4000, keyfile: "priv/server.key", certfile: "priv/server.pem"],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :bloomchain, BloomchainWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r{priv/static/customer/*/*.*(js|css|jpg|svg|png|ico|txt)$},
      ~r{priv/gettext/.*(po)$},
      ~r{lib/bloomchain_web/views/.*(ex)$},
      ~r{lib/bloomchain_web/templates/.*(eex)$}
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Configure your database
config :bloomchain, Bloomchain.Repo,
  adapter: Ecto.Adapters.Postgres,
  username: System.get_env("DB_USER"),
  password: System.get_env("DB_PASSWORD"),
  database: System.get_env("DB_NAME") || 'bloomchain_dev',
  hostname: System.get_env("DB_HOST") || 'localhost',
  port: System.get_env("DB_PORT") || 5432,
  pool_size: 10

config :bloomchain, Bloomchain.ElasticsearchCluster, url: System.get_env("ES_URL")

# # Arc Image Upload
config :arc,
  storage: Arc.Storage.Local

# Arc Image Upload
# config :arc,
#   # storage: Arc.Storage.Local
#   storage: Arc.Storage.S3,
#   bucket: {:system, "AWS_BUCKET"},
#   virtual_host: true
#
# config :ex_aws,
#   access_key_id: [{:system, "AWS_ACCESS_KEY_ID"}, :instance_role],
#   secret_access_key: [{:system, "AWS_SECRET_ACCESS_KEY"}, :instance_role],
#   region: [{:system, "AWS_REGION"}, :instance_role]
